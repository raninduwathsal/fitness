name: Build and Deploy

on:
  push:
    branches:
      - ALL-CI-CD

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Create output directory
        run: mkdir -p dist

      - name: Copy JAR and TXT files
        run: |
          cp target/*.jar dist/
          cp *.txt dist/  # Copy .txt files from root

      - name: Deploy to server and restart service
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Set up SSH key
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          
          # SSH into server, copy files, and restart service
          ssh -i private_key -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            # Stop the service if running
            sudo systemctl stop fitness-app.service || true
          
            # Create app directory if it doesnâ€™t exist
            mkdir -p /opt/fitness-app
          
            # Remove old files
            rm -f /opt/fitness-app/*.jar
            rm -f /opt/fitness-app/*.txt
          EOF
          
          # Copy new JAR and .txt files
          scp -i private_key -o StrictHostKeyChecking=no dist/*.jar dist/*.txt $SERVER_USER@$SERVER_IP:/opt/fitness-app/
          
          # Restart the service
          ssh -i private_key -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
            sudo systemctl start fitness-app.service
            sudo systemctl enable fitness-app.service  # Ensure it starts on boot
          EOF

      - name: Upload artifacts (optional)
        uses: actions/upload-artifact@v3
        with:
          name: app-bundle
          path: dist/*